import Head from "next/head";
import { GetServerSideProps, InferGetServerSidePropsType } from "next";
import Banner from "@/components/banner/banner";
import Navbar from "@/components/navbar/navbar";
import CardsSection from "@/components/cards-section/cards-section";
import {
  getPopularVideos,
  getVideos,
  Video,
  getWatchItAgainVideos,
} from "@/lib/videos";
import styles from "@/styles/Home.module.css";
import { redirectUser } from "@/utils";

export default function Home({
  DCVideos,
  travelVideos,
  productivityVideos,
  popularVideos,
  watchItAgainVideos,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  console.log({ watchItAgainVideos });
  return (
    <>
      <Head>
        <title>Netflix</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.main}>
        <Navbar />
        <Banner
          videoId="4zH5iYM4wJo"
          imgUrl="/static/clifford.webp"
          subTitle="cute dog"
          title="clifford the big red dog"
        />
        <div className={styles.sectionWrapper}>
          <CardsSection
            title="Watch it again"
            videos={watchItAgainVideos}
            size="small"
          />
          <CardsSection title="DC" videos={DCVideos} size="large" />
          <CardsSection title="Travel" videos={travelVideos} size="small" />
          <CardsSection
            title="Productivity"
            videos={productivityVideos}
            size="medium"
          />
          <CardsSection
            title="Popular in Egypt"
            videos={popularVideos}
            size="small"
          />
        </div>
      </div>
    </>
  );
}

export const getServerSideProps: GetServerSideProps<{
  DCVideos: Video[];
  travelVideos: Video[];
  productivityVideos: Video[];
  popularVideos: Video[];
  watchItAgainVideos: Video[];
}> = async (context) => {
  const { userId, token } = await redirectUser(context);
  if (!userId) {
    return {
      props: {},
      redirect: {
        destination: "/login",
        permanent: false,
      },
    };
  }
  const watchItAgainVideos = await getWatchItAgainVideos(userId, token ?? "");
  const DCVideos = await getVideos("DC trailers");
  const travelVideos = await getVideos("travel");

  const productivityVideos = await getVideos("productivity");

  const popularVideos = await getPopularVideos();

  return {
    props: {
      DCVideos,
      travelVideos,
      productivityVideos,
      popularVideos,
      watchItAgainVideos,
    },
  };
};
